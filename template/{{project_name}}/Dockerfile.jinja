# Base stage: install dependencies needed for other stages
FROM ubuntu:24.04 AS base

RUN groupadd -g 5000 {{ project_name }} \
  && useradd -d /home/{{ project_name }} -m -u 5000 -g 5000 {{ project_name }}

ENV PATH="/venv/bin:$PATH"

RUN mkdir /app &&                           \
  chown {{ project_name }}:{{ project_name }} /app &&   \
  mkdir /venv &&                            \
  chown {{ project_name }}:{{ project_name }} /venv &&  \
  mkdir /py-bin &&                          \
  chown {{ project_name }}:{{ project_name }} /py-bin


# Build app stage: install the {{ project_name }} app itself
FROM base AS build

USER {{ project_name }}
ENV UV_LINK_MODE=copy             \
    UV_COMPILE_BYTECODE=1         \
    UV_PROJECT_ENVIRONMENT=/venv  \
    UV_PYTHON_INSTALL_DIR=/py-bin

COPY --from=ghcr.io/astral-sh/uv:0.6.6 /uv /uvx /bin/
RUN uv python install {{ default_python_version }} && \
    ln -s $(uv python find {{ default_python_version }}) /py-bin/python

WORKDIR /app

# This is so dumb, but uv won't build if the README isn't there
RUN touch /app/README.md

RUN --mount=type=cache,target=/home/{{ project_name }}/.cache            \
    --mount=type=bind,source=uv.lock,target=uv.lock                \
    --mount=type=bind,source=pyproject.toml,target=pyproject.toml  \
    --mount=type=bind,source=src/,target=src/                      \
    uv sync                                                        \
        --locked                                                   \
        --no-dev                                                   \
        --no-editable                                              \
        --frozen


# Build final stage: copy the virtualenv and run the app
FROM base as final

ENV PATH="/venv/bin:/py-bin:$PATH" \
    DEPLOY_ENV="PROD"

COPY --from=stage_1 --chown={{ project_name }}:{{ project_name }} /venv /venv
COPY --from=stage_1 --chown={{ project_name }}:{{ project_name }} /py-bin /py-bin

# Smoke test!
RUN python -Ic 'import the_app'
